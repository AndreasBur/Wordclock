#include <iostream>
#include "StandardTypes.h"

using namespace std;

const unsigned short Font7x11[][15] =
{
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char !
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char "
        {0x06, 0x00, 0x00, 0x48, 0x01, 0xFC, 0x00, 0x4A, 0x01, 0xFC, 0x00, 0x4A, 0x00, 0x00, 0x00},  // Code for char #
        {0x05, 0x00, 0x00, 0x48, 0x00, 0xD4, 0x01, 0x56, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char $
        {0x05, 0x00, 0x00, 0x14, 0x00, 0x5A, 0x00, 0xB4, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char %
        {0x06, 0x00, 0x00, 0x60, 0x00, 0x98, 0x00, 0xA4, 0x00, 0xE4, 0x00, 0x80, 0x00, 0x00, 0x00},  // Code for char &
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char '
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x86, 0x01, 0x00, 0x00, 0x00, 0x00},  // Code for char (
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x86, 0x01, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char )
        {0x06, 0x00, 0x00, 0x04, 0x00, 0x14, 0x00, 0x0E, 0x00, 0x14, 0x00, 0x04, 0x00, 0x00, 0x00},  // Code for char *
        {0x06, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0xFE, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00},  // Code for char +
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char ,
        {0x06, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00},  // Code for char -
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char .
        {0x06, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x30, 0x00, 0x0C, 0x00, 0x02, 0x00, 0x00, 0x00},  // Code for char /
        {0x06, 0x00, 0x00, 0x7C, 0x00, 0x82, 0x00, 0x82, 0x00, 0x82, 0x00, 0x7C, 0x00, 0x00, 0x00},  // Code for char 0
        {0x06, 0x00, 0x00, 0x80, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00},  // Code for char 1
        {0x06, 0x00, 0x00, 0xC4, 0x00, 0xA2, 0x00, 0x92, 0x00, 0x8A, 0x00, 0x84, 0x00, 0x00, 0x00},  // Code for char 2
        {0x06, 0x00, 0x00, 0x44, 0x00, 0x82, 0x00, 0x92, 0x00, 0x92, 0x00, 0x6C, 0x00, 0x00, 0x00},  // Code for char 3
        {0x06, 0x00, 0x00, 0x30, 0x00, 0x28, 0x00, 0xA4, 0x00, 0xFE, 0x00, 0xA0, 0x00, 0x00, 0x00},  // Code for char 4
        {0x06, 0x00, 0x00, 0x40, 0x00, 0x9E, 0x00, 0x92, 0x00, 0x92, 0x00, 0x62, 0x00, 0x00, 0x00},  // Code for char 5
        {0x06, 0x00, 0x00, 0x78, 0x00, 0x94, 0x00, 0x92, 0x00, 0x92, 0x00, 0x62, 0x00, 0x00, 0x00},  // Code for char 6
        {0x06, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0xC2, 0x00, 0x32, 0x00, 0x0E, 0x00, 0x00, 0x00},  // Code for char 7
        {0x06, 0x00, 0x00, 0x6C, 0x00, 0x92, 0x00, 0x92, 0x00, 0x92, 0x00, 0x6C, 0x00, 0x00, 0x00},  // Code for char 8
        {0x06, 0x00, 0x00, 0x8C, 0x00, 0x92, 0x00, 0x92, 0x00, 0x52, 0x00, 0x3C, 0x00, 0x00, 0x00},  // Code for char 9
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char :
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xC8, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char ;
        {0x06, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x28, 0x00, 0x28, 0x00, 0x44, 0x00, 0x00, 0x00},  // Code for char <
        {0x06, 0x00, 0x00, 0x28, 0x00, 0x28, 0x00, 0x28, 0x00, 0x28, 0x00, 0x28, 0x00, 0x00, 0x00},  // Code for char =
        {0x06, 0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00},  // Code for char >
        {0x05, 0x00, 0x00, 0x04, 0x00, 0x82, 0x00, 0xB2, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char ?
        {0x06, 0x00, 0x00, 0xFC, 0x00, 0x02, 0x01, 0x32, 0x01, 0x4A, 0x01, 0x7C, 0x01, 0x00, 0x00},  // Code for char @
        {0x07, 0x80, 0x00, 0xC0, 0x00, 0xBA, 0x00, 0x26, 0x00, 0xB8, 0x00, 0xC0, 0x00, 0x80, 0x00},  // Code for char A
        {0x06, 0x82, 0x00, 0xFE, 0x00, 0x92, 0x00, 0x92, 0x00, 0x92, 0x00, 0x6C, 0x00, 0x00, 0x00},  // Code for char B
        {0x06, 0x00, 0x00, 0x7C, 0x00, 0x82, 0x00, 0x82, 0x00, 0x82, 0x00, 0x46, 0x00, 0x00, 0x00},  // Code for char C
        {0x06, 0x82, 0x00, 0xFE, 0x00, 0x82, 0x00, 0x82, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00, 0x00},  // Code for char D
        {0x06, 0x00, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x92, 0x00, 0xBA, 0x00, 0xC6, 0x00, 0x00, 0x00},  // Code for char E
        {0x06, 0x00, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x92, 0x00, 0x3A, 0x00, 0x06, 0x00, 0x00, 0x00},  // Code for char F
        {0x07, 0x00, 0x00, 0x7C, 0x00, 0x82, 0x00, 0x82, 0x00, 0xA2, 0x00, 0x66, 0x00, 0x20, 0x00},  // Code for char G
        {0x07, 0x82, 0x00, 0xFE, 0x00, 0x92, 0x00, 0x10, 0x00, 0x92, 0x00, 0xFE, 0x00, 0x82, 0x00},  // Code for char H
        {0x06, 0x00, 0x00, 0x82, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x82, 0x00, 0x82, 0x00, 0x00, 0x00},  // Code for char I
        {0x06, 0x00, 0x00, 0x60, 0x00, 0x82, 0x00, 0x82, 0x00, 0x7E, 0x00, 0x02, 0x00, 0x00, 0x00},  // Code for char J
        {0x07, 0x82, 0x00, 0xFE, 0x00, 0x92, 0x00, 0x10, 0x00, 0x2A, 0x00, 0xC6, 0x00, 0x82, 0x00},  // Code for char K
        {0x06, 0x00, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x82, 0x00, 0x80, 0x00, 0xE0, 0x00, 0x00, 0x00},  // Code for char L
        {0x07, 0x82, 0x00, 0xFE, 0x00, 0x8E, 0x00, 0x10, 0x00, 0x8E, 0x00, 0xFE, 0x00, 0x82, 0x00},  // Code for char M
        {0x07, 0x82, 0x00, 0xFE, 0x00, 0x8E, 0x00, 0x30, 0x00, 0xC2, 0x00, 0xFE, 0x00, 0x02, 0x00},  // Code for char N
        {0x06, 0x00, 0x00, 0x7C, 0x00, 0x82, 0x00, 0x82, 0x00, 0x82, 0x00, 0x7C, 0x00, 0x00, 0x00},  // Code for char O
        {0x06, 0x00, 0x00, 0x82, 0x00, 0xFE, 0x00, 0xA2, 0x00, 0x22, 0x00, 0x1C, 0x00, 0x00, 0x00},  // Code for char P
        {0x06, 0x00, 0x00, 0x7C, 0x00, 0x82, 0x00, 0x82, 0x01, 0x82, 0x01, 0x7C, 0x01, 0x00, 0x00},  // Code for char Q
        {0x07, 0x00, 0x00, 0x82, 0x00, 0xFE, 0x00, 0xA2, 0x00, 0x22, 0x00, 0x5C, 0x00, 0x80, 0x00},  // Code for char R
        {0x06, 0x00, 0x00, 0xCC, 0x00, 0x92, 0x00, 0x92, 0x00, 0x94, 0x00, 0x66, 0x00, 0x00, 0x00},  // Code for char S
        {0x06, 0x00, 0x00, 0x06, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x82, 0x00, 0x06, 0x00, 0x00, 0x00},  // Code for char T
        {0x07, 0x02, 0x00, 0x7E, 0x00, 0x82, 0x00, 0x80, 0x00, 0x82, 0x00, 0x7E, 0x00, 0x02, 0x00},  // Code for char U
        {0x07, 0x02, 0x00, 0x1E, 0x00, 0xE2, 0x00, 0x80, 0x00, 0x72, 0x00, 0x0E, 0x00, 0x02, 0x00},  // Code for char V
        {0x07, 0x02, 0x00, 0x7E, 0x00, 0x82, 0x00, 0x78, 0x00, 0x82, 0x00, 0x7E, 0x00, 0x02, 0x00},  // Code for char W
        {0x07, 0x82, 0x00, 0xC6, 0x00, 0x28, 0x00, 0x10, 0x00, 0x28, 0x00, 0xC6, 0x00, 0x82, 0x00},  // Code for char X
        {0x07, 0x02, 0x00, 0x06, 0x00, 0x8A, 0x00, 0xF0, 0x00, 0x8A, 0x00, 0x06, 0x00, 0x02, 0x00},  // Code for char Y
        {0x06, 0x00, 0x00, 0xC6, 0x00, 0xA2, 0x00, 0x92, 0x00, 0x8A, 0x00, 0xC6, 0x00, 0x00, 0x00},  // Code for char Z
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00},  // Code for char [
        {0x05, 0x00, 0x00, 0x02, 0x00, 0x0C, 0x00, 0x70, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00},  // Code for char BackSlash
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char ]
        {0x06, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00},  // Code for char ^
        {0x07, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04},  // Code for char _
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char `
        {0x07, 0x00, 0x00, 0xD0, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xF0, 0x00, 0x80, 0x00},  // Code for char a
        {0x06, 0x82, 0x00, 0xFE, 0x00, 0x90, 0x00, 0x88, 0x00, 0x88, 0x00, 0x70, 0x00, 0x00, 0x00},  // Code for char b
        {0x06, 0x00, 0x00, 0x70, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0x98, 0x00, 0x00, 0x00},  // Code for char c
        {0x07, 0x00, 0x00, 0x70, 0x00, 0x88, 0x00, 0x88, 0x00, 0x92, 0x00, 0xFE, 0x00, 0x80, 0x00},  // Code for char d
        {0x06, 0x00, 0x00, 0x70, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xB0, 0x00, 0x00, 0x00},  // Code for char e
        {0x06, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0xFC, 0x00, 0x8A, 0x00, 0x8A, 0x00, 0x00, 0x00},  // Code for char f
        {0x07, 0x00, 0x00, 0x70, 0x00, 0x88, 0x02, 0x88, 0x02, 0x90, 0x02, 0xF8, 0x01, 0x08, 0x00},  // Code for char g
        {0x07, 0x82, 0x00, 0xFE, 0x00, 0x90, 0x00, 0x08, 0x00, 0x88, 0x00, 0xF0, 0x00, 0x80, 0x00},  // Code for char h
        {0x06, 0x00, 0x00, 0x88, 0x00, 0x88, 0x00, 0xFA, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00},  // Code for char i
        {0x05, 0x00, 0x00, 0x08, 0x02, 0x08, 0x02, 0x0A, 0x02, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00},  // Code for char j
        {0x06, 0x82, 0x00, 0xFE, 0x00, 0x20, 0x00, 0xA8, 0x00, 0xD8, 0x00, 0x88, 0x00, 0x00, 0x00},  // Code for char k
        {0x06, 0x00, 0x00, 0x80, 0x00, 0x82, 0x00, 0xFE, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00},  // Code for char l
        {0x07, 0x88, 0x00, 0xF8, 0x00, 0x88, 0x00, 0xF0, 0x00, 0x88, 0x00, 0xF0, 0x00, 0x80, 0x00},  // Code for char m
        {0x07, 0x88, 0x00, 0xF8, 0x00, 0x90, 0x00, 0x08, 0x00, 0x88, 0x00, 0xF0, 0x00, 0x80, 0x00},  // Code for char n
        {0x06, 0x00, 0x00, 0x70, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0x70, 0x00, 0x00, 0x00},  // Code for char o
        {0x06, 0x08, 0x02, 0xF8, 0x03, 0x90, 0x02, 0x88, 0x00, 0x88, 0x00, 0x70, 0x00, 0x00, 0x00},  // Code for char p
        {0x07, 0x00, 0x00, 0x70, 0x00, 0x88, 0x00, 0x88, 0x00, 0x90, 0x02, 0xF8, 0x03, 0x08, 0x02},  // Code for char q
        {0x06, 0x00, 0x00, 0x88, 0x00, 0xF8, 0x00, 0x90, 0x00, 0x88, 0x00, 0x08, 0x00, 0x00, 0x00},  // Code for char r
        {0x06, 0x00, 0x00, 0x90, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0x48, 0x00, 0x00, 0x00},  // Code for char s
        {0x06, 0x08, 0x00, 0x7C, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0x40, 0x00, 0x00, 0x00},  // Code for char t
        {0x07, 0x08, 0x00, 0x78, 0x00, 0x80, 0x00, 0x80, 0x00, 0x48, 0x00, 0xF8, 0x00, 0x80, 0x00},  // Code for char u
        {0x07, 0x08, 0x00, 0x38, 0x00, 0xC8, 0x00, 0x80, 0x00, 0x68, 0x00, 0x18, 0x00, 0x08, 0x00},  // Code for char v
        {0x07, 0x08, 0x00, 0x78, 0x00, 0x88, 0x00, 0x60, 0x00, 0x88, 0x00, 0x78, 0x00, 0x08, 0x00},  // Code for char w
        {0x06, 0x00, 0x00, 0x88, 0x00, 0xD8, 0x00, 0x20, 0x00, 0xD8, 0x00, 0x88, 0x00, 0x00, 0x00},  // Code for char x
        {0x07, 0x08, 0x00, 0x18, 0x02, 0x68, 0x02, 0x80, 0x03, 0x68, 0x00, 0x18, 0x00, 0x08, 0x00},  // Code for char y
        {0x06, 0x00, 0x00, 0x98, 0x00, 0xC8, 0x00, 0xA8, 0x00, 0x98, 0x00, 0xC8, 0x00, 0x00, 0x00},  // Code for char z
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xFC, 0x01, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00},  // Code for char {
        {0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char |
        {0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0xFC, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00},  // Code for char }
        {0x06, 0x00, 0x00, 0x20, 0x00, 0x10, 0x00, 0x30, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x00},  // Code for char ~
        {0x03, 0xFF, 0x00, 0x81, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}   // Code for char 
};

int FontChar[8][11];

int FontCharConverted[8][11];

int main()
{
    for(int Index = 0; Index < 96; Index++)
    {
        int Column = 0;
        for(int Segment = 1; Segment < 15; Segment++)
        {
            int SegmentA = Font7x11[Index][Segment++];
            int SegmentB = Font7x11[Index][Segment];

            for(int Bit = 0; Bit < 8; Bit++) {
               FontChar[Column][Bit] = readBit(SegmentA, Bit);
            }

            for(int Bit = 0; Bit < 3; Bit++) {
               FontChar[Column][8 + Bit] = readBit(SegmentB, Bit);
            }
            Column++;
        }

        for(int a = 0; a < 11; a++)
        {
            int Row = 0;
            for(int i = 0; i < 8; i++) {
                //if(FontChar[i][a] == 0) cout << " ";
                //else cout << FontChar[i][a];
                //WRITE_BIT(Row, i, FontChar[i][a]);
                writeBit(Row, i, FontChar[i][a]);
            }
            //cout << endl;
            if(Row < 16) cout << "0x0" << hex << Row << ",";
            else cout << "0x" << hex << Row << ",";
        }
        cout << endl;
    }

    return 0;
}
