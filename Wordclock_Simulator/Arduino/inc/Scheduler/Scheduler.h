/******************************************************************************************************************************************************
 *  COPYRIGHT
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) Andreas Burnickl                                                                                                 All rights reserved.
 *
 *  \endverbatim
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------------------------------------*/
/**     \file       Scheduler.h
 *      \brief
 *
 *      \details
 *
******************************************************************************************************************************************************/
#ifndef _SCHEDULER_H_
#define _SCHEDULER_H_

/******************************************************************************************************************************************************
 * I N C L U D E S
******************************************************************************************************************************************************/
#include "StandardTypes.h"
#include "Arduino.h"
#include "functional"

/******************************************************************************************************************************************************
 *  G L O B A L   C O N S T A N T   M A C R O S
******************************************************************************************************************************************************/
/* Scheduler configuration parameter */


/* Scheduler parameter */



/******************************************************************************************************************************************************
 *  G L O B A L   F U N C T I O N   M A C R O S
******************************************************************************************************************************************************/


/******************************************************************************************************************************************************
 *  C L A S S   S C H E D U L E R
******************************************************************************************************************************************************/
class Scheduler
{
/******************************************************************************************************************************************************
 *  P U B L I C   D A T A   T Y P E S   A N D   S T R U C T U R E S
******************************************************************************************************************************************************/
  public:


/******************************************************************************************************************************************************
 *  P R I V A T E   D A T A   A N D   F U N C T I O N S
******************************************************************************************************************************************************/
  private:
    //static constexpr byte TaskCycleInitValue{10u};
    //byte TaskCycle{10u};
    byte TaskCycleCounter{0u};

    // functions
    bool isCycleHit(byte);
    void triggerTasks();

    void triggerTaskOnCycle(byte TaskCycle, std::function<void(void)> TaskFunction)
    {
        if(isCycleHit(TaskCycle)) { TaskFunction(); }
    }


    void incrementTaskCycleCounter() {
        TaskCycleCounter++;
    }

/******************************************************************************************************************************************************
 *  P U B L I C   F U N C T I O N S
******************************************************************************************************************************************************/
  public:
    constexpr Scheduler() { }
    ~Scheduler() { }

	// get methods
    //static constexpr byte getTaskCycleInitValue() { return TaskCycleInitValue; }
    //byte getTaskCycle() const { return TaskCycle; }
    byte getTaskCycleCounter() const { return TaskCycleCounter; }

	// set methods
    //void setTaskCycle(byte sTaskCycle) { TaskCycle = sTaskCycle; }
    void setTaskCycleCounter(byte sTaskCycleCounter) { TaskCycleCounter = sTaskCycleCounter; }

	// methods
    void task();
};

#endif

/******************************************************************************************************************************************************
 *  E N D   O F   F I L E
******************************************************************************************************************************************************/
