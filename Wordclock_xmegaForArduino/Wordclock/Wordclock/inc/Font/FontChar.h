/******************************************************************************************************************************************************
 *  COPYRIGHT
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) Andreas Burnickl                                                                                                 All rights reserved.
 *
 *  \endverbatim
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------------------------------------*/
/**     \file       FontChar.h
 *      \brief      
 *
 *      \details    
 *                  
******************************************************************************************************************************************************/
#ifndef _FONT_CHAR_H_
#define _FONT_CHAR_H_

/******************************************************************************************************************************************************
 * I N C L U D E S
******************************************************************************************************************************************************/
#include "StandardTypes.h"
#include "Arduino.h"
#include "array.h"

/******************************************************************************************************************************************************
 *  G L O B A L   C O N S T A N T   M A C R O S
******************************************************************************************************************************************************/
/* FontChar configuration parameter */


/* FontChar parameter */



/******************************************************************************************************************************************************
 *  G L O B A L   F U N C T I O N   M A C R O S
******************************************************************************************************************************************************/


/******************************************************************************************************************************************************
 *  C L A S S   F O N T C H A R
******************************************************************************************************************************************************/
class FontChar
{
/******************************************************************************************************************************************************
 *  P U B L I C   D A T A   T Y P E S   A N D   S T R U C T U R E S
******************************************************************************************************************************************************/
  public:
  
  
/******************************************************************************************************************************************************
 *  P R I V A T E   D A T A   A N D   F U N C T I N O N S
******************************************************************************************************************************************************/
  private:
    byte Width;

/******************************************************************************************************************************************************
 *  P R O T E C T E D   D A T A   A N D   F U N C T I N O N S
******************************************************************************************************************************************************/
  protected:
    constexpr FontChar() : Width(0) {

    }

    constexpr FontChar(byte sWidth) : Width(sWidth) {

    }


/******************************************************************************************************************************************************
 *  P U B L I C   F U N C T I O N S
******************************************************************************************************************************************************/
  public:
	// get methods
    byte getWidth() const { return Width; }

	// set methods
    void setWidth(byte sWidth) { Width = sWidth; }

    // methods
};


/******************************************************************************************************************************************************
 *  C L A S S   F O N T C H A R V E R T I C A L
******************************************************************************************************************************************************/
template <typename RowType, byte RowsSize> class FontCharVertical : public FontChar
{
/******************************************************************************************************************************************************
 *  P U B L I C   D A T A   T Y P E S   A N D   S T R U C T U R E S
******************************************************************************************************************************************************/
  public:

  
/******************************************************************************************************************************************************
 *  P R I V A T E   D A T A   A N D   F U N C T I N O N S
******************************************************************************************************************************************************/
  private:
    using RowsType = std::array<RowType, RowsSize>;
    RowsType Rows;

/******************************************************************************************************************************************************
 *  P U B L I C   F U N C T I O N S
******************************************************************************************************************************************************/
  public:
    constexpr FontCharVertical(byte sWidth, std::array<RowType, RowsSize> sRows) : FontChar(sWidth), Rows(sRows) {

    }

    constexpr FontCharVertical() : FontChar(0), Rows{} {
    
    }

    // get methods
    RowType getRowFast(byte Index) const { return Rows[Index]; }
    stdReturnType getRow(byte Index, RowType& Row) {
        if(Index < RowsSize) {
            Row = Rows[Index];
            return E_OK;
        } else {
            return E_NOT_OK;
        }
    }
    RowsType getRows() const { return Rows; }

    // set methods
    void setRowFast(byte Index, RowType Row) { Rows[Index] = Row; }
    stdReturnType setRow(byte Index, RowType Row) {
        if(Index < RowsSize) {
            Rows[Index] = Row;
            return E_OK;
            } else {
            return E_NOT_OK;
        }
    }
    void setRows(RowsType sRows) { Rows = sRows; }

	// methods

};

#endif

/******************************************************************************************************************************************************
 *  E N D   O F   F I L E
******************************************************************************************************************************************************/
