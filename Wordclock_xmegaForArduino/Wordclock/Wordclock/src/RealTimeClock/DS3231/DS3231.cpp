/******************************************************************************************************************************************************
 *  COPYRIGHT
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) Andreas Burnickl                                                                                                 All rights reserved.
 *
 *  \endverbatim
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------------------------------------*/
/**     \file       DS3231.cpp
 *      \brief      
 *
 *      \details    
 *                  
 *
******************************************************************************************************************************************************/
#define _DS3231_SOURCE_

/******************************************************************************************************************************************************
 * I N C L U D E S
******************************************************************************************************************************************************/
#include "DS3231.h"
#include "DS3231Regs.h"
#include "Wire.h"

/******************************************************************************************************************************************************
 *  L O C A L   C O N S T A N T   M A C R O S 
******************************************************************************************************************************************************/


/******************************************************************************************************************************************************
 *  L O C A L   F U N C T I O N   M A C R O S
******************************************************************************************************************************************************/



/******************************************************************************************************************************************************
 *  L O C A L   D A T A   T Y P E S   A N D   S T R U C T U R E S
******************************************************************************************************************************************************/



/******************************************************************************************************************************************************
 * P U B L I C   F U N C T I O N S
******************************************************************************************************************************************************/

/******************************************************************************************************************************************************
  getDateTime()
******************************************************************************************************************************************************/
ClockDateTime DS3231::getDateTime() const
{
	Wire.beginTransmission(DeviceAddress);
	Wire.write(DS3231Regs::StartAddrTime);
	Wire.endTransmission();
	
	Wire.requestFrom(DeviceAddress, TimeDateNumberOfBytes);
	return readDateTime();
}
    
/******************************************************************************************************************************************************
  getTime()
******************************************************************************************************************************************************/
ClockTime DS3231::getTime() const
{
	Wire.beginTransmission(DeviceAddress);
	Wire.write(DS3231Regs::StartAddrTime);
	Wire.endTransmission();
	
	Wire.requestFrom(DeviceAddress, TimeNumberOfBytes);
	return readTime();
}
	
/******************************************************************************************************************************************************
  getDate()
******************************************************************************************************************************************************/
ClockDate DS3231::getDate() const
{
	Wire.beginTransmission(DeviceAddress);
	Wire.write(DS3231Regs::StartAddrDate);
	Wire.endTransmission();
	
	Wire.requestFrom(DeviceAddress, DateNumberOfBytes);
	return readDate();
}

/******************************************************************************************************************************************************
  setDateTime()
******************************************************************************************************************************************************/
void DS3231::setDateTime(ClockDateTime DateTime) const
{
	Wire.beginTransmission(DeviceAddress);
	Wire.write(DS3231Regs::StartAddrTime);
	writeDateTime(DateTime);
	Wire.endTransmission();
	enableOscillator();
}

/******************************************************************************************************************************************************
  setTime()
******************************************************************************************************************************************************/
void DS3231::setTime(ClockTime Time) const
{
	Wire.beginTransmission(DeviceAddress);
	Wire.write(DS3231Regs::StartAddrTime);
	writeTime(Time);
	Wire.endTransmission();
	enableOscillator();
}

/******************************************************************************************************************************************************
  setDate()
******************************************************************************************************************************************************/
void DS3231::setDate(ClockDate Date) const
{
	Wire.beginTransmission(DeviceAddress);
	Wire.write(DS3231Regs::StartAddrDate);
	writeDate(Date);
	Wire.endTransmission();
	enableOscillator();
}


/******************************************************************************************************************************************************
 * P R I V A T E   F U N C T I O N S
******************************************************************************************************************************************************/

/******************************************************************************************************************************************************
  readRegister()
******************************************************************************************************************************************************/
byte DS3231::readRegister(byte RegAddress) const {
    Wire.beginTransmission(DeviceAddress);
    Wire.write(RegAddress);
    Wire.endTransmission();
    
    Wire.requestFrom(RegAddress, 1u);
    return Wire.read();
}

/******************************************************************************************************************************************************
  writeRegister()
******************************************************************************************************************************************************/
void DS3231::writeRegister(byte RegAddress, byte Value) const {
    Wire.beginTransmission(DeviceAddress);
    Wire.write(RegAddress);
    Wire.write(Value);
    Wire.endTransmission();
}

/******************************************************************************************************************************************************
  readDateTime()
******************************************************************************************************************************************************/
ClockDateTime DS3231::readDateTime() const {
    ClockDateTime dateTime;
    dateTime.setTime(readTime());
    Wire.read(); // dummy read for weekdays
    dateTime.setDate(readDate());
    return dateTime;
}

/******************************************************************************************************************************************************
  readDate()
******************************************************************************************************************************************************/
ClockDate DS3231::readDate() const {
    ClockDate date;
    date.setDay(convBcdToBin(Wire.read()));
    date.setMonth(readMonth());
    date.setYear(convBcdToBin(Wire.read()) + 2000u);
    return date;
}

/******************************************************************************************************************************************************
  readMonth()
******************************************************************************************************************************************************/
DS3231::MonthType DS3231::readMonth() const {
    uint8_t monthRaw = Bit(Wire.read()).readBits(DS3231Regs::MonthBM);
    return static_cast<MonthType>(convBcdToBin(monthRaw));
}

/******************************************************************************************************************************************************
  readTime()
******************************************************************************************************************************************************/
ClockTime DS3231::readTime() const {
    ClockTime time;
    time.setSecond(convBcdToBin(Wire.read()));
    time.setMinute(convBcdToBin(Wire.read()));
    time.setHour(convBcdToBin(Wire.read()));
    return time;
}

/******************************************************************************************************************************************************
  writeDateTime()
******************************************************************************************************************************************************/
void DS3231::writeDateTime(ClockDateTime DateTime) const {
    writeTime(DateTime.getTime());
    writeDate(DateTime.getDate());
}

/******************************************************************************************************************************************************
  writeTime()
******************************************************************************************************************************************************/
void DS3231::writeTime(ClockTime Time) const {
    Wire.write(convBinToBcd(Time.getSecond()));
    Wire.write(convBinToBcd(Time.getMinute()));
    Wire.write(convBinToBcd(Time.getHour()));
}

/******************************************************************************************************************************************************
  writeDate()
******************************************************************************************************************************************************/
void DS3231::writeDate(ClockDate Date) const {
    Wire.write(convWeekday(Date.getWeekday()));
    Wire.write(convBinToBcd(Date.getDay()));
    Wire.write(convBinToBcd(Date.getMonth()));
    Wire.write(convBinToBcd(Date.getYear() - 2000u));
}

/******************************************************************************************************************************************************
  enableOscillator()
******************************************************************************************************************************************************/
void DS3231::enableOscillator() const {
    byte status = readRegister(DS3231Regs::AddrStatus);
    Bit(status).writeBit(DS3231Regs::StatusOscillatorStopFlagBP,
    DS3231Regs::StatusOscillatorStopFlagRunning);
    writeRegister(DS3231Regs::AddrStatus, status);
}


/******************************************************************************************************************************************************
 *  E N D   O F   F I L E
******************************************************************************************************************************************************/
 