/******************************************************************************************************************************************************
 *  COPYRIGHT
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) Andreas Burnickl                                                                                                 All rights reserved.
 *
 *  \endverbatim
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------------------------------------*/
/**     \file       BH1750.cpp
 *      \brief      
 *
 *      \details    
 *                  
 *
******************************************************************************************************************************************************/
#define _BH1750_SOURCE_

/******************************************************************************************************************************************************
 * I N C L U D E S
******************************************************************************************************************************************************/
#include "BH1750.h"
#include "Wire.h"

/******************************************************************************************************************************************************
 *  L O C A L   C O N S T A N T   M A C R O S 
******************************************************************************************************************************************************/
#define BH1750_ILLUMINANCE_RAW_VALUE_NUMBER_OF_BYTES        2

/******************************************************************************************************************************************************
 *  L O C A L   F U N C T I O N   M A C R O S
******************************************************************************************************************************************************/



/******************************************************************************************************************************************************
 *  L O C A L   D A T A   T Y P E S   A N D   S T R U C T U R E S
******************************************************************************************************************************************************/



/******************************************************************************************************************************************************
 * P U B L I C   F U N C T I O N S
******************************************************************************************************************************************************/

/******************************************************************************************************************************************************
  Constructor of BH1750
******************************************************************************************************************************************************/
/*! \brief          BH1750 Constructor
 *  \details        Instantiation of the BH1750 library
 *
 *  \return         -
******************************************************************************************************************************************************/
BH1750::BH1750()
{
    Mode = MODE_NONE;
    Illuminance = 0;
} /* BH1750 */


/******************************************************************************************************************************************************
  Destructor of BH1750
******************************************************************************************************************************************************/
BH1750::~BH1750()
{

} /* ~BH1750 */


/******************************************************************************************************************************************************
  init()
******************************************************************************************************************************************************/
/*! \brief          
 *  \details        
 *                  
 *  \return         -
******************************************************************************************************************************************************/
stdReturnType BH1750::init(ModeType Mode)
{
    return setMode(Mode);
} /* init */


/******************************************************************************************************************************************************
  task()
******************************************************************************************************************************************************/
/*! \brief          
 *  \details        
 *                  
 *  \return         -
******************************************************************************************************************************************************/
void BH1750::task()
{
    sendMode();
    readIlluminance();
} /* task */


/******************************************************************************************************************************************************
  setMode()
******************************************************************************************************************************************************/
/*! \brief          
 *  \details        
 *                  
 *  \return         -
******************************************************************************************************************************************************/
stdReturnType BH1750::setMode(ModeType sMode)
{
    stdReturnType ReturnValue = E_NOT_OK;
    Mode = sMode;

    if(Mode != MODE_NONE) {
        if(sendMode() == E_OK) ReturnValue = E_OK;
    }

    return ReturnValue;
} /* setMode */


/******************************************************************************************************************************************************
 * P R I V A T E   F U N C T I O N S
******************************************************************************************************************************************************/

/******************************************************************************************************************************************************
  readIlluminance()
******************************************************************************************************************************************************/
/*! \brief          
 *  \details        
 *                  
 *  \return         -
******************************************************************************************************************************************************/
uint16_t BH1750::readIlluminance()
{
    uint8_t LowByte, HighByte;

    Wire.requestFrom(BH1750_I2C_ADDR, BH1750_ILLUMINANCE_RAW_VALUE_NUMBER_OF_BYTES);
    HighByte = Wire.read();
    LowByte = Wire.read();

    return convertRawToLux(combineRawValueParts(HighByte, LowByte));
}


/******************************************************************************************************************************************************
  sendModeForOneTime()
******************************************************************************************************************************************************/
/*! \brief          
 *  \details        
 *                  
 *  \return         -
******************************************************************************************************************************************************/
void BH1750::sendModeForOneTimeMode()
{
    switch(Mode) {
        case MODE_ONE_TIME_HIGH_RES_MODE :
        case MODE_ONE_TIME_HIGH_RES_MODE_2 :
        case MODE_ONE_TIME_LOW_RES_MODE :
            sendMode();
            break;
        default:
            break;
    }
}


/******************************************************************************************************************************************************
  sendMode()
******************************************************************************************************************************************************/
/*! \brief          
 *  \details        
 *                  
 *  \return         -
******************************************************************************************************************************************************/
stdReturnType BH1750::sendMode()
{
        Wire.beginTransmission(static_cast<uint8_t>(BH1750_I2C_ADDR));
        Wire.write(Mode);
        if(Wire.endTransmission() == E_OK) { return E_OK; }
        else { return E_NOT_OK; }
}

/******************************************************************************************************************************************************
 *  E N D   O F   F I L E
******************************************************************************************************************************************************/
 